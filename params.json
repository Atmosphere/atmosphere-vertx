{"name":"Atmosphere-vertx","tagline":"Atmosphere for Vert.x","body":"### Vertosphere: A Java WebSocket and HTTP server powered by the [Atmosphere Framework](http://github.com/Atmosphere/atmosphere) and the [Vert.x](http://vertx.io/)  Framework.\r\n\r\nThe easiest way to get started with Vert.x is to download a sample and start it. [Or look at the Javadoc](http://atmosphere.github.io/atmosphere-vertx/apidocs/). You can download the [Chat]() or [Jersey]() distribution.\r\n\r\n```bash\r\n   % unzip vertx-<name>-distribution.jar\r\n   % vertx VertxAtmosphere -cp:classes:vertx-<name>-distribution.jar\r\n```\r\n\r\nSamples are the same as then one available in Atmosphere, e.g everything that works with Atmosphere works AS-IT-IS with the Vert.x module.\r\n\r\nDownload Vert.x extension [) or use Maven\r\n\r\n```xml\r\n     <dependency>\r\n         <groupId>org.atmosphere</groupId>\r\n         <artifactId>atmosphere-vertx</artifactId>\r\n         <version>1.0.0.beta1</version>\r\n     </dependency>\r\n```\r\nFor example, the famous [multi-room Chat application](https://github.com/Atmosphere/atmosphere-vertx/blob/master/samples/chat/src/main/java/org/atmosphere/vertx/samples/chat/ChatRoom.java#L37-L124) in Atmosphere\r\nCan be run on top of Vert.x by doing:\r\n```java\r\npublic class VertxChatServer extends Verticle {\r\n\r\n    private static final Logger logger = LoggerFactory.getLogger(VertxChatServer.class);\r\n\r\n    @Override\r\n    public void start() throws Exception {\r\n        VertxAtmosphere.Builder b = new VertxAtmosphere.Builder();\r\n        HttpServer httpServer = vertx.createHttpServer();\r\n\r\n        httpServer.requestHandler(new Handler<HttpServerRequest>() {\r\n            public void handle(HttpServerRequest req) {\r\n                String path = req.path;\r\n                if (path.equals(\"/\")) {\r\n                    path = \"/index.html\";\r\n                }\r\n\r\n                logger.info(\"Servicing request {}\", path);\r\n                req.response.sendFile(\"src/main/resources\" + path);\r\n            }\r\n        });\r\n\r\n        b.resource(ChatRoom.class).httpServer(httpServer).url(\"/chat/:room\").build();\r\n\r\n        httpServer.listen(8080);\r\n    }\r\n}\r\n```\r\nSame for Jersey. You can run any [Jersey resource](https://github.com/Atmosphere/atmosphere-vertx/blob/master/samples/jersey-chat/src/main/java/org/atmosphere/vertx/samples/chat/ResourceChat.java#L36-L61) like\r\ncan be boostrapped by doing\r\n```java\r\npublic class VertxJerseyChat extends Verticle {\r\n\r\n    private static final Logger logger = LoggerFactory.getLogger(VertxJerseyChat.class);\r\n\r\n    @Override\r\n    public void start() throws Exception {\r\n        VertxAtmosphere.Builder b = new VertxAtmosphere.Builder();\r\n        HttpServer httpServer = vertx.createHttpServer();\r\n\r\n        httpServer.requestHandler(new Handler<HttpServerRequest>() {\r\n            public void handle(HttpServerRequest req) {\r\n                String path = req.path;\r\n                if (path.equals(\"/\")) {\r\n                    path = \"/index.html\";\r\n                }\r\n\r\n                logger.info(\"Servicing request {}\", path);\r\n                req.response.sendFile(\"src/main/resources\" + path);\r\n            }\r\n        });\r\n\r\n        b.resource(ResourceChat.class)\r\n         .initParam(ApplicationConfig.WEBSOCKET_CONTENT_TYPE, \"application/json\")\r\n         .httpServer(httpServer).url(\"/chat\")\r\n         .build();\r\n\r\n        httpServer.listen(8080);\r\n    }\r\n}\r\n```\r\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/32168bb100278d916ea2069bf508a99a \"githalytics.com\")](http://githalytics.com/Atmosphere/atmosphere-vertx)","google":"UA-31990725-1","note":"Don't delete this file! It's used internally to help with page regeneration."}